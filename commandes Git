#branche -----------------------------------------------------------------------------------------

$git branch     pour la branche ou on se situe 

$git branch test     creation  de la branche test 

$git checkout test    se positionner sur  la branche test 

$git checkout -b test   creation et positionnement sur la branche test 

$git branch -d the_local_branch     supprimer une branche en locale

$git branch -m the_local_branch     on se positionne sur la branche renommer une branche en locale


#merge ---------------------------------------------------------------------------------------------

       HEAD   l'endroit ou je me situe 

$git merge test       on se positionne sur la branche master et on fait le merge 

    :x  lors de la modification 

#commande -------------------------------------------------------------------------------------------

git init    
git satus 

git add   <ficher>      repertoire de travail  ===>  l'index 

git commit -m "message"     l'index  ===>   depot git 


git rm --cached  <ficher>        supprimer le add qu on a fait 

git ls-files --others --exclude-standard    pour voir les fichiers ajouter avec add 

git commit -m "message"      pour commiter

git checkout e34fg (id du commit SHA)  pour aller vers le commit 

git log                     pour voir les differents commits  

git log -2                  pour voir les deux dernier commits

git log --oneline             pour voir que les sujets des commits 

git log --author " le nom de l'author"     pour voir les commits d'une personne 

git log --after="2019-09-16"      filter les commits par date 



git diff               comparer le fichier du travail   ====>    l'index 

git diff --cached      comparer l'index   ===>   depot git local repository

git diff HEAD          comparer  le fichier du travail    ====>  depot git local repository


git blame  nom du fichier      voir les personnes qui ont modifier le fichier 


git reset --hard                pour retourner au dernier commit 

git reset --hard  e35TF4        identifiant du commit      pour retourner au commit


git reset --mixed

git reset --soft 


git revert <commit>      commande pour annuler un commit

git reset <commit>       commande pour annuler définitivement un commit


git commit -m " modification du commit 4"  --amend       pour modifier un commit existant 


git branch                     pour voir la branche la on est 

git log --graph --oneline      pour voir le graphe des branches 


git branch   nom                 creation d une branche 


git checkout nom de branche       pour  deplacer d une branche a une autre 

git merge  nom de branche         faut etre sur la branche ou on veut fusionner et on met le nom de la branche celle qu on veut fusion

git branch -d nom de branche       supprimer une branche 


git rebase  nom de la branche       faut etre sur la branche ou on veut fusionner 



git tag v1.0.0  e34a4e      pour taguer  un commit 

git tag --list             pour voir la liste des tags 




git branch --all               pour voir les copies local des  branches distantes 

git fetch                     pour telecharger des copies local des  branches distantes 

git merge FETCH_HEAD  

git pull origin master         pour mettre a jour 


 



git blame nomdufichier.extension        qui a fait une modification particulière dans un fichier

git show 05b1233                        renvoie directement les détails du commit recherché 


.gitignore                              pour ignorer des fichier par exemple les fichier de config
 
 
 
 cloning : crée une copie complète d’un dépôt sur votre ordinateur local.
 forking : copie un projet github existant sur votre compte github.
  
  
 Git remote add » crée simplement une entrée dans votre configuration git qui spécifie le nom d’un URL. 
 Alors que « git clone » crée un nouveau référentiel git en copiant celui existant à l’URI.
 
 
 git remote set-url origin new.git.url/here      changer l'url remote 
 
 git remote -v 
 
 #modification ---------------------------------------------------------------------------------------------
 
 $git stash                 mettre de côté vos modifications en cours
   
 $git stash pop             récupérez les modifications que vous aviez mises de côté
   
 fork                       faire une copie de repository  sur mon compte 
